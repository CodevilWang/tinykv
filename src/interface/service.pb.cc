// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace TinyKv {
class ReqKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqKey>
      _instance;
} _ReqKey_default_instance_;
class RespValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RespValue>
      _instance;
} _RespValue_default_instance_;
}  // namespace TinyKv
namespace protobuf_service_2eproto {
static void InitDefaultsReqKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TinyKv::_ReqKey_default_instance_;
    new (ptr) ::TinyKv::ReqKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TinyKv::ReqKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqKey}, {}};

static void InitDefaultsRespValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TinyKv::_RespValue_default_instance_;
    new (ptr) ::TinyKv::RespValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TinyKv::RespValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RespValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRespValue}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RespValue.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::ReqKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::ReqKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::ReqKey, qid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::ReqKey, key_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::RespValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::RespValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::RespValue, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TinyKv::RespValue, value_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::TinyKv::ReqKey)},
  { 9, 16, sizeof(::TinyKv::RespValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TinyKv::_ReqKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TinyKv::_RespValue_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rservice.proto\022\006TinyKv\"\"\n\006ReqKey\022\013\n\003qid"
      "\030\001 \002(\003\022\013\n\003key\030\002 \003(\t\"*\n\tRespValue\022\016\n\006stat"
      "us\030\001 \002(\005\022\r\n\005value\030\002 \003(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 103);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_2eproto
namespace TinyKv {

// ===================================================================

void ReqKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqKey::kQidFieldNumber;
const int ReqKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqKey::ReqKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ReqKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TinyKv.ReqKey)
}
ReqKey::ReqKey(const ReqKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      key_(from.key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qid_ = from.qid_;
  // @@protoc_insertion_point(copy_constructor:TinyKv.ReqKey)
}

void ReqKey::SharedCtor() {
  qid_ = GOOGLE_LONGLONG(0);
}

ReqKey::~ReqKey() {
  // @@protoc_insertion_point(destructor:TinyKv.ReqKey)
  SharedDtor();
}

void ReqKey::SharedDtor() {
}

void ReqKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqKey::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqKey& ReqKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ReqKey.base);
  return *internal_default_instance();
}


void ReqKey::Clear() {
// @@protoc_insertion_point(message_clear_start:TinyKv.ReqKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  qid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReqKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TinyKv.ReqKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 qid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_qid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key(this->key_size() - 1).data(),
            static_cast<int>(this->key(this->key_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TinyKv.ReqKey.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TinyKv.ReqKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TinyKv.ReqKey)
  return false;
#undef DO_
}

void ReqKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TinyKv.ReqKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 qid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->qid(), output);
  }

  // repeated string key = 2;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TinyKv.ReqKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->key(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TinyKv.ReqKey)
}

::google::protobuf::uint8* ReqKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TinyKv.ReqKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 qid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->qid(), target);
  }

  // repeated string key = 2;
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key(i).data(), static_cast<int>(this->key(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TinyKv.ReqKey.key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->key(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TinyKv.ReqKey)
  return target;
}

size_t ReqKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TinyKv.ReqKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 qid = 1;
  if (has_qid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qid());
  }
  // repeated string key = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->key_size());
  for (int i = 0, n = this->key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->key(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TinyKv.ReqKey)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TinyKv.ReqKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TinyKv.ReqKey)
    MergeFrom(*source);
  }
}

void ReqKey::MergeFrom(const ReqKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TinyKv.ReqKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.has_qid()) {
    set_qid(from.qid());
  }
}

void ReqKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TinyKv.ReqKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqKey::CopyFrom(const ReqKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TinyKv.ReqKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ReqKey::Swap(ReqKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqKey::InternalSwap(ReqKey* other) {
  using std::swap;
  key_.InternalSwap(CastToBase(&other->key_));
  swap(qid_, other->qid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqKey::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RespValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespValue::kStatusFieldNumber;
const int RespValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespValue::RespValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RespValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TinyKv.RespValue)
}
RespValue::RespValue(const RespValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TinyKv.RespValue)
}

void RespValue::SharedCtor() {
  status_ = 0;
}

RespValue::~RespValue() {
  // @@protoc_insertion_point(destructor:TinyKv.RespValue)
  SharedDtor();
}

void RespValue::SharedDtor() {
}

void RespValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RespValue::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RespValue& RespValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RespValue.base);
  return *internal_default_instance();
}


void RespValue::Clear() {
// @@protoc_insertion_point(message_clear_start:TinyKv.RespValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RespValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TinyKv.RespValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value(this->value_size() - 1).data(),
            static_cast<int>(this->value(this->value_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TinyKv.RespValue.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TinyKv.RespValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TinyKv.RespValue)
  return false;
#undef DO_
}

void RespValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TinyKv.RespValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TinyKv.RespValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TinyKv.RespValue)
}

::google::protobuf::uint8* RespValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TinyKv.RespValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TinyKv.RespValue.value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->value(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TinyKv.RespValue)
  return target;
}

size_t RespValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TinyKv.RespValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }
  // repeated string value = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_size());
  for (int i = 0, n = this->value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TinyKv.RespValue)
  GOOGLE_DCHECK_NE(&from, this);
  const RespValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RespValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TinyKv.RespValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TinyKv.RespValue)
    MergeFrom(*source);
  }
}

void RespValue::MergeFrom(const RespValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TinyKv.RespValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.has_status()) {
    set_status(from.status());
  }
}

void RespValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TinyKv.RespValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespValue::CopyFrom(const RespValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TinyKv.RespValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RespValue::Swap(RespValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespValue::InternalSwap(RespValue* other) {
  using std::swap;
  value_.InternalSwap(CastToBase(&other->value_));
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RespValue::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TinyKv
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TinyKv::ReqKey* Arena::CreateMaybeMessage< ::TinyKv::ReqKey >(Arena* arena) {
  return Arena::CreateInternal< ::TinyKv::ReqKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TinyKv::RespValue* Arena::CreateMaybeMessage< ::TinyKv::RespValue >(Arena* arena) {
  return Arena::CreateInternal< ::TinyKv::RespValue >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
